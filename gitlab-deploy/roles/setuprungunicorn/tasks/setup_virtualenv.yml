
---

- name: Update apt
  apt:
    update-cache: yes

- name: Install psycopg2 dependencies
  apt:
    name: libpq-dev
    state: present

- name: Install pip
  apt: name=python3-pip state=present

- name: Install virtualenv
  pip:
    name: virtualenv
    version: 16
  tags: packages

# - name: Check if Supervisor exists
#   stat: path=/etc/init.d/supervisor
#   register: supervisor_status
#   when: recreate_virtualenv

# - name: Ensure all processes managed by Supervisor are stopped if exists
#   command: supervisorctl stop all
#   when: recreate_virtualenv and supervisor_status.stat.exists

# - name: Ensure no existing virtualenv exists
#   file:
#     state: absent
#     path: "{{ virtualenv_path }}/"
#   when: recreate_virtualenv

- name: Create the virtualenv
  command: virtualenv -p {{ virtualenv_python_version }} {{ virtualenv_path }}
           creates={{ virtualenv_path }}/bin/activate

# - name: Install the requirements
#   pip: virtualenv={{ virtualenv_path }}
# - name: add alias
#   lineinfile:
#     dest="{{ home_folder}}/.bashrc"
#     line="alias actwebenv='source {{ virtualenv_path }}/bin/activate'"
#     owner={{ user }}
#     regexp='^'"alias actwebenv='source {{ virtualenv_path }}/bin/activate'"$'
#     state=present
#     insertafter=EOF
#     create=True

# - name: Activate virtualenv
#   shell: source {{ virtualenv_path }}/bin/activate && \
#          cd {{ project_folder }} && \
#          nohup python manage.py runserver 0.0.0.0:8000 & executable=/bin/bash
#   become: no

# - name: Run Django dev server
#   shell: python manage.py runserver 0.0.0.0:8000 executable=/bin/bash
#   args:
#     chdir: "{{ project_folder }}"

- name: Create the Gunicorn script file
  template: src=gunicorn_start.j2
            dest={{ virtualenv_path }}/bin/gunicorn_start
            owner={{ gunicorn_user }}
            group={{ gunicorn_group }}
            mode=0755
            backup=yes
  tags: deploy

- name: Create the application log folder
  file: path={{ application_log_dir }}
        owner={{ gunicorn_user }}
        group={{ gunicorn_group }}
        mode=0774
        state=directory

- name: Create (or retain) the application log file
  copy: content=""
        dest={{ application_log_file }}
        owner={{ gunicorn_user }}
        group={{ gunicorn_group }}
        mode=0664
        force=no

- name: Ensure that the application file permissions are set properly
  file: path={{ virtualenv_path }}
        recurse=yes
        owner={{ gunicorn_user }}
        group={{ gunicorn_group }}
        state=directory
  changed_when: False


- name: Create the virtualenv postactivate script to set environment variables
  template: src=virtualenv_postactivate.j2
            dest={{ virtualenv_path }}/bin/postactivate
            owner={{ gunicorn_user }}
            group={{ gunicorn_group }}
            mode=0640
            backup=yes
  tags: deploy
  become_user: "{{ gunicorn_user }}"

- name: Create the maintenance page
  template: src=maintenance_off.html
            dest={{ virtualenv_path }}/maintenance_off.html
            mode=0664

